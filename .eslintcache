[{"D:\\amjed\\react task\\src\\index.js":"1","D:\\amjed\\react task\\src\\App.js":"2","D:\\amjed\\react task\\src\\reportWebVitals.js":"3","D:\\amjed\\react task\\src\\component\\categ.js":"4","D:\\amjed\\react task\\src\\component\\postes.js":"5","D:\\amjed\\react task\\src\\component\\Nav.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":545,"mtime":1625255110949,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":6514,"mtime":1626474721266,"results":"11","hashOfConfig":"8"},{"size":8774,"mtime":1626525431296,"results":"12","hashOfConfig":"8"},{"size":499,"mtime":1625254512667,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"14zkpyw",{"filePath":"17","messages":"18","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":1,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"D:\\amjed\\react task\\src\\index.js",[],["30","31"],"D:\\amjed\\react task\\src\\App.js",["32","33","34","35","36"],"import logo from './logo.svg';\nimport react,{component,useState} from 'react';\nimport './App.css';\nimport { BrowserRouter,Route,Switch } from \"react-router-dom\";\nimport Categ from './component/categ';\nimport Post from './component/postes';\nimport Nav from './component/Nav'\n\n\n\n\nfunction App() {\n\n  return (\n      <BrowserRouter>\n        <div >\n          <Nav />\n          <Route path=\"/categ\" component={Categ}></Route>\n          <Route path=\"/post\" component={Post}></Route>\n        </div>\n      </BrowserRouter>\n\n\n  );\n\n}\n\nexport default App;\n","D:\\amjed\\react task\\src\\reportWebVitals.js",[],"D:\\amjed\\react task\\src\\component\\categ.js",["37","38"],"import React, { useState, component, useEffect } from 'react';\r\nimport \"./comp.css\"\r\nimport {\r\n    ModalProvider,\r\n    Modal,\r\n    useModal,\r\n    ModalTransition,\r\n} from 'react-simple-hook-modal';\r\nimport 'react-simple-hook-modal/dist/styles.css';\r\nimport DatePicker from 'react-date-picker';\r\nimport Select from 'react-select'\r\n\r\nfunction Categ() {\r\n    const { isModalOpen, openModal, closeModal } = useModal();\r\n    const [time, settime] = useState(new Date());\r\n    const [deta, setdata] = useState({\r\n        id:null,\r\n        categuray: null,\r\n        date:null\r\n    });\r\n    const [buttomtext,setbuttomtext]=useState(\"اضافة\");\r\n    const [check,setcheck]=useState(true);\r\n\r\n    const [display, setdisplay] = useState([]);\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:3000/api/get/Categ/all\", {\r\n            method: \"get\",\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"content-type\": \"application/json\"\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(dataa => {\r\n                setdisplay(dataa)\r\n            });\r\n\r\n    });\r\n    const onaction = (e) => {\r\n        fetch(\"http://localhost:3000/api/get/categ\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                categuray: deta.categuray,\r\n                date: time\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data)\r\n            }\r\n            )\r\n    }\r\n    const ondel=(availability)=>{\r\n        fetch(\"http://localhost:3000/api/get/categ/del\", {\r\n            method: \"delete\",\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n\r\n                id:availability.id\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n            }\r\n            )\r\n}\r\nconst onedit=()=>{\r\n    fetch(\"http://localhost:3000/api/get/categ/update\", {\r\n        method: \"put\",\r\n        headers: {\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"content-type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            categuray: deta.categuray,\r\n            date: time,\r\n            id:deta.id\r\n        })\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n        }\r\n        )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"cat-main\">\r\n            <div>\r\n                <header>\r\n                    <h2>\r\n                        التصنيف\r\n                    </h2>\r\n                </header>\r\n\r\n            </div>\r\n\r\n            <div className=\"add-buttom\">\r\n                <ModalProvider>\r\n\r\n                    <>\r\n                        <button className=\"add-1\" onClick={function(e) {openModal();setdata({});setbuttomtext(\"اضافة\");setcheck(true)}}>اضافة تصنيف</button>\r\n                        <Modal\r\n                            id=\"any-unique-identifier\"\r\n                            isOpen={isModalOpen}\r\n                            transition={ModalTransition.BOTTOM_UP}\r\n                        >\r\n                            <div className=\"model-con\">\r\n                            <div className=\"pos-model\">                                <label className=\"cat-lbl\" >:التصنيف</label>\r\n                                <input className=\"cat-add3\" type=\"text\" value={(deta&&deta.categuray)} onChange={(e) => setdata({ ...deta, categuray: e.target.value })}  />\r\n                                <label className=\"cat-lbl2\">:التاريخ</label>\r\n                            <DatePicker className=\"cat-add2\"\r\n                                onChange={settime}\r\n                                value={time} />\r\n                                </div>\r\n                                </div>\r\n                            <button className=\"cat-but\" onClick={()=> {check? onaction():onedit()}} >{buttomtext}</button>\r\n                            <button className=\"cat-but2\" onClick={closeModal}>الغاء</button>\r\n                        </Modal>\r\n                    </>\r\n                </ModalProvider>\r\n                {/* <button > اضافة تصنيف</button> */}\r\n\r\n            </div>\r\n            <div className=\"cat-table\">\r\n                <table className=\"table table-dark\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\" >التاريخ</th>\r\n                            <th scope=\"col\">التصنيف</th>\r\n                            <th scope=\"col\">ت</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {display.map(availability => {\r\n                            return (\r\n                                <tr>\r\n                                    <td>{availability.date} <div className=\"drops-down\"><h3> اجراء<div className=\"drop\"><ul><li onClick={function(e){openModal();setdata(availability); settime(availability.date) ;setbuttomtext(\"تعديل\");setcheck(false)}}>تعديل</li><li onClick={()=>window.confirm(\"Are you sure you wish to delete this item?\")&& ondel(availability)}>مسح</li></ul> </div></h3></div>\r\n                                     {/* <Select className=\"cat-sele\" defaultValue={{label:\"اجراء\"}} options={[\r\n                                        {value:\"اجراء\" ,label:\"اجراء\"},\r\n                                        { value: 'edit', label: <button onClick={openModal}> تعديل</button> },\r\n                                        { value: 'delete', label: <button onClick={()=>window.confirm(\"Are you sure you wish to delete this item?\")&& ondel(availability)}> مسح</button> }]} onChange={(e)=>{if (e.value===\"edit\"){setdata(availability); settime(availability.date)} ;setbuttomtext(\"تعديل\");setcheck(false)}} /> */}\r\n                                         </td>\r\n                                    <td>{availability.categuray}</td>\r\n                                    <td >{availability.id} </td>\r\n\r\n\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Categ","D:\\amjed\\react task\\src\\component\\postes.js",["39","40","41","42","43"],"D:\\amjed\\react task\\src\\component\\Nav.js",["44","45","46","47"],"import react,{component,useState} from 'react';\r\nimport {Link ,NavLink} from 'react-router-dom'\r\nimport \"./comp.css\"\r\n\r\n\r\nfunction Nav(){\r\n    return(\r\n        <div className=\"navebar\">\r\n            <div className=\"continet\">\r\n            <ul className=\"ul\">\r\n                <Link className=\"a\" to=\"/categ\">التصنيفات</Link>\r\n                <Link className=\"a\" to=\"/post\">المنشورات</Link>\r\n            </ul>  \r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav;",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":1,"column":8,"nodeType":"54","messageId":"55","endLine":1,"endColumn":12},{"ruleId":"52","severity":1,"message":"56","line":2,"column":8,"nodeType":"54","messageId":"55","endLine":2,"endColumn":13},{"ruleId":"52","severity":1,"message":"57","line":2,"column":15,"nodeType":"54","messageId":"55","endLine":2,"endColumn":24},{"ruleId":"52","severity":1,"message":"58","line":2,"column":25,"nodeType":"54","messageId":"55","endLine":2,"endColumn":33},{"ruleId":"52","severity":1,"message":"59","line":4,"column":30,"nodeType":"54","messageId":"55","endLine":4,"endColumn":36},{"ruleId":"52","severity":1,"message":"57","line":1,"column":27,"nodeType":"54","messageId":"55","endLine":1,"endColumn":36},{"ruleId":"52","severity":1,"message":"60","line":11,"column":8,"nodeType":"54","messageId":"55","endLine":11,"endColumn":14},{"ruleId":"52","severity":1,"message":"57","line":1,"column":27,"nodeType":"54","messageId":"55","endLine":1,"endColumn":36},{"ruleId":"52","severity":1,"message":"61","line":13,"column":9,"nodeType":"54","messageId":"55","endLine":13,"endColumn":30},{"ruleId":"52","severity":1,"message":"62","line":13,"column":32,"nodeType":"54","messageId":"55","endLine":13,"endColumn":51},{"ruleId":"63","severity":1,"message":"64","line":68,"column":9,"nodeType":"65","messageId":"66","endLine":68,"endColumn":20},{"ruleId":"67","severity":2,"message":"68","line":178,"column":72,"nodeType":"69","messageId":"70","endLine":178,"endColumn":126},{"ruleId":"52","severity":1,"message":"56","line":1,"column":8,"nodeType":"54","messageId":"55","endLine":1,"endColumn":13},{"ruleId":"52","severity":1,"message":"57","line":1,"column":15,"nodeType":"54","messageId":"55","endLine":1,"endColumn":24},{"ruleId":"52","severity":1,"message":"58","line":1,"column":25,"nodeType":"54","messageId":"55","endLine":1,"endColumn":33},{"ruleId":"52","severity":1,"message":"71","line":2,"column":15,"nodeType":"54","messageId":"55","endLine":2,"endColumn":22},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'react' is defined but never used.","'component' is defined but never used.","'useState' is defined but never used.","'Switch' is defined but never used.","'Select' is defined but never used.","'NotificationContainer' is defined but never used.","'NotificationManager' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","'NavLink' is defined but never used.","no-global-assign","no-unsafe-negation"]