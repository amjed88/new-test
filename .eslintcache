[{"D:\\amjed\\react task\\src\\index.js":"1","D:\\amjed\\react task\\src\\App.js":"2","D:\\amjed\\react task\\src\\reportWebVitals.js":"3","D:\\amjed\\react task\\src\\component\\categ.js":"4","D:\\amjed\\react task\\src\\component\\postes.js":"5","D:\\amjed\\react task\\src\\component\\Nav.js":"6","D:\\amjed\\react task\\src\\component\\Humburker.js":"7","D:\\amjed\\react task\\src\\component\\Navication.js":"8","D:\\amjed\\react task\\src\\component\\navlink.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":545,"mtime":1625255110949,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":6656,"mtime":1627326623069,"results":"14","hashOfConfig":"11"},{"size":8461,"mtime":1627326626090,"results":"15","hashOfConfig":"11"},{"size":380,"mtime":1627420441995,"results":"16","hashOfConfig":"11"},{"size":653,"mtime":1627421154062,"results":"17","hashOfConfig":"11"},{"size":212,"mtime":1627419564596,"results":"18","hashOfConfig":"11"},{"size":396,"mtime":1627416264466,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"14zkpyw",{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"D:\\amjed\\react task\\src\\index.js",[],["43","44"],"D:\\amjed\\react task\\src\\App.js",["45","46","47","48","49"],"import logo from './logo.svg';\nimport react,{component,useState} from 'react';\nimport './App.css';\nimport { BrowserRouter,Route,Switch } from \"react-router-dom\";\nimport Categ from './component/categ';\nimport Post from './component/postes';\nimport Nav from './component/Nav'\n\n\n\n\nfunction App() {\n\n  return (\n      <BrowserRouter>\n        <div >\n          <Nav />\n          <Route path=\"/categ\" component={Categ}></Route>\n          <Route path=\"/post\" component={Post}></Route>\n        </div>\n      </BrowserRouter>\n\n\n  );\n\n}\n\nexport default App;\n","D:\\amjed\\react task\\src\\reportWebVitals.js",[],"D:\\amjed\\react task\\src\\component\\categ.js",["50","51","52","53","54","55"],"import React, { useState, component, useEffect,useCallback } from 'react';\r\nimport \"./comp.css\"\r\nimport {\r\n    ModalProvider,\r\n    Modal,\r\n    useModal,\r\n    ModalTransition,\r\n} from 'react-simple-hook-modal';\r\nimport 'react-simple-hook-modal/dist/styles.css';\r\nimport DatePicker from 'react-date-picker';\r\nimport Select from 'react-select'\r\n\r\nfunction Categ() {\r\n    const { isModalOpen, openModal, closeModal } = useModal();\r\n    const [time, settime] = useState(new Date());\r\n    const [deta, setdata] = useState({\r\n        id:null,\r\n        categuray: null,\r\n        date:null\r\n    });\r\n    const [buttomtext,setbuttomtext]=useState(\"اضافة\");\r\n    const [check,setcheck]=useState(true);\r\n\r\n    const [display, setdisplay] = useState([]);\r\n    const displays = useCallback(async()=>{\r\n        const res=await fetch(\"http://localhost:3000/api/get/Categ/all\", {\r\n            method: \"get\",\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"content-type\": \"application/json\"\r\n            }\r\n        })\r\n            const respose=await res.json()\r\n            setdisplay(respose)\r\n\r\n    });\r\n    useEffect(() => {\r\n        displays();\r\n\r\n    });\r\n    const onaction = (e) => {\r\n        fetch(\"http://localhost:3000/api/get/categ\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                categuray: deta.categuray,\r\n                date: time\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data)\r\n            }\r\n            )\r\n            { displays()};\r\n    }\r\n    const ondel=(availability)=>{\r\n        fetch(\"http://localhost:3000/api/get/categ/del\", {\r\n            method: \"delete\",\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n\r\n                id:availability.id\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n            }\r\n            )\r\n            { displays()};\r\n}\r\nconst onedit=()=>{\r\n    fetch(\"http://localhost:3000/api/get/categ/update\", {\r\n        method: \"put\",\r\n        headers: {\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"content-type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            categuray: deta.categuray,\r\n            date: time,\r\n            id:deta.id\r\n        })\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n        }\r\n        )\r\n        { displays()};\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"cat-main\">\r\n            <div>\r\n                <header>\r\n                    <h2>\r\n                        التصنيف\r\n                    </h2>\r\n                </header>\r\n\r\n            </div>\r\n\r\n            <div className=\"add-buttom\">\r\n                <ModalProvider>\r\n\r\n                    <>\r\n                        <button className=\"add-1\" onClick={function(e) {openModal();setdata({});setbuttomtext(\"اضافة\");setcheck(true)}}>اضافة تصنيف</button>\r\n                        <Modal\r\n                            id=\"any-unique-identifier\"\r\n                            isOpen={isModalOpen}\r\n                            transition={ModalTransition.BOTTOM_UP}\r\n                        >\r\n                            <div className=\"model-con\">\r\n                            <div className=\"pos-model\">                                <label className=\"cat-lbl\" >:التصنيف</label>\r\n                                <input className=\"cat-add3\" type=\"text\" value={(deta&&deta.categuray)} onChange={(e) => setdata({ ...deta, categuray: e.target.value })}  />\r\n                                <label className=\"cat-lbl2\">:التاريخ</label>\r\n                            <DatePicker className=\"cat-add2\"\r\n                                onChange={settime}\r\n                                value={time} />\r\n                                </div>\r\n                                </div>\r\n                            <button className=\"cat-but\" onClick={()=> {check? onaction():onedit()}} >{buttomtext}</button>\r\n                            <button className=\"cat-but2\" onClick={closeModal}>الغاء</button>\r\n                        </Modal>\r\n                    </>\r\n                </ModalProvider>\r\n                {/* <button > اضافة تصنيف</button> */}\r\n\r\n            </div>\r\n            <div className=\"cat-table\">\r\n                <table className=\"table table-dark\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\" >التاريخ</th>\r\n                            <th scope=\"col\">التصنيف</th>\r\n                            <th scope=\"col\">ت</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {display.map(availability => {\r\n                            return (\r\n                                <tr>\r\n                                    <td>{availability.date} <div className=\"drops-down\"><h3> اجراء<div className=\"drop\"><ul><li onClick={function(e){openModal();setdata(availability); settime(availability.date) ;setbuttomtext(\"تعديل\");setcheck(false)}}>تعديل</li><li onClick={()=>window.confirm(\"Are you sure you wish to delete this item?\")&& ondel(availability)}>مسح</li></ul> </div></h3></div>\r\n                                     {/* <Select className=\"cat-sele\" defaultValue={{label:\"اجراء\"}} options={[\r\n                                        {value:\"اجراء\" ,label:\"اجراء\"},\r\n                                        { value: 'edit', label: <button onClick={openModal}> تعديل</button> },\r\n                                        { value: 'delete', label: <button onClick={()=>window.confirm(\"Are you sure you wish to delete this item?\")&& ondel(availability)}> مسح</button> }]} onChange={(e)=>{if (e.value===\"edit\"){setdata(availability); settime(availability.date)} ;setbuttomtext(\"تعديل\");setcheck(false)}} /> */}\r\n                                         </td>\r\n                                    <td>{availability.categuray}</td>\r\n                                    <td >{availability.id} </td>\r\n\r\n\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Categ","D:\\amjed\\react task\\src\\component\\postes.js",["56","57","58","59","60"],"import React, { useState, component, useEffect,useCallback } from 'react';\r\nimport {\r\n    ModalProvider,\r\n    Modal,\r\n    useModal,\r\n    ModalTransition,\r\n} from 'react-simple-hook-modal';\r\nimport 'react-simple-hook-modal/dist/styles.css';\r\nimport \"./comp.css\"\r\nimport DatePicker from 'react-date-picker';\r\nimport Select from 'react-select';\r\n\r\n\r\n\r\n\r\n\r\nfunction Post() {\r\n    const { isModalOpen, openModal, closeModal } = useModal();\r\n    const [time, settime] = useState(new Date());\r\n    const [selects, setselects] = useState([{\r\n        id: null,\r\n        categuray: null,\r\n        date: null\r\n    }]);\r\n    const [data, setdata] = useState({\r\n        id:null,\r\n        depar: null,\r\n        postitl: null,\r\n        date: null,\r\n        categuray:null\r\n\r\n    });\r\n    const [desplay, setdesplay] = useState([]);\r\n    const [id,setid]=useState({\r\n        catid:null,\r\n    });\r\n    const [buttomtext,setbuttomtext]=useState(\"اضافة\");\r\n    const [check,setcheck]=useState(true);\r\n    const cat =()=>{\r\n                fetch(\"http://localhost:3000/api/get/Categ/all\", {\r\n            method: \"get\",\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"content-type\": \"application/json\"\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(dataa => {\r\n                setselects(dataa)\r\n            });\r\n    }\r\n    const display = useCallback(async()=>{\r\n        const res=await fetch(\"http://localhost:3000/api/get/post/all\", {\r\n            method: \"get\",\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"content-type\": \"application/json\"\r\n            }\r\n        })\r\n            const respose=await res.json()\r\n            setdesplay(respose)\r\n\r\n    });\r\n    useEffect(() => {\r\n        display();\r\n\r\n    });\r\n    const onchange = (e) => {\r\n        setid({ ...id, catid: e.value });\r\n    }\r\n    const onaction = () => {\r\n        fetch(\"http://localhost:3000/api/get/post/insert\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                depar: data.depar,\r\n                postitl: data.postitl,\r\n                date: time,\r\n                catid: id.catid\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n            }\r\n            )\r\n            {display()};\r\n\r\n\r\n    }\r\n    const onedit=()=>{\r\n            fetch(\"http://localhost:3000/api/get/post/updat\", {\r\n                method: \"put\",\r\n                headers: {\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    \"content-type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    depar: data.depar,\r\n                    postitl: data.postitl,\r\n                    date: time,\r\n                    catid: id.catid,\r\n                    id:data.id\r\n                })\r\n            })\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                }\r\n                )\r\n                {display()};\r\n\r\n    }\r\n    const ondel=(availability)=>{\r\n        fetch(\"http://localhost:3000/api/get/post/del\", {\r\n            method: \"delete\",\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n\r\n                id:availability.id\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n            }\r\n            )\r\n            {display()};\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"cat-main\">\r\n            <div>\r\n                <header>\r\n                    <h2>\r\n                        المنشورات\r\n                    </h2>\r\n                </header>\r\n\r\n            </div>\r\n            <div className=\"add-buttom\">\r\n                <ModalProvider>\r\n\r\n                    <>\r\n                        <button class=\"add-1\" onClick={function(e) {openModal();setdata({});setbuttomtext(\"اضافة\");setcheck(true)}} >اضافة منشور</button>\r\n                        <Modal\r\n                            id=\"any-unique-identifier\"\r\n                            isOpen={isModalOpen}\r\n                            transition={ModalTransition.BOTTOM_UP}\r\n                        >\r\n                            <div className=\"model-con\">\r\n                            <div className=\"pos-model\">\r\n                                <label className=\"cat-lbl\" >:التصنيف</label>\r\n                                <Select className=\"cat-select\" defaultValue={{label:data.categuray}} options={selects.map(res => ({ value: res.id, label: res.categuray }))} onChange={(e) => onchange(e)} openMenuOnClick={cat()} />\r\n                                <label className=\"cat-lbl2\">:التاريخ</label>\r\n                            <DatePicker className=\"cat-add2\"\r\n                                onChange={settime}\r\n                                value={time} />\r\n                                <label className=\"cal-labl3\">:القسم</label>\r\n                                <input className=\"cat-add3\" type=\"text\" value={data.depar} onChange={(e) => setdata({...data,depar: e.target.value })} />\r\n                                <label className=\"cal-labl4\">:عنوان المنشور</label>\r\n                                <input className=\"cat-add4\" type=\"text\" value={data.postitl} onChange={(e) => setdata({...data, postitl: e.target.value })} />\r\n                            </div>\r\n                            </div>\r\n                            <button className=\"cat-but\" onClick={()=> {check? onaction():onedit();closeModal()}} > {buttomtext}</button>\r\n                            <button className=\"cat-but2\" onClick={closeModal}>الغاء</button>\r\n                        </Modal>\r\n                    </>\r\n                </ModalProvider>\r\n                {/* <button > اضافة تصنيف</button> */}\r\n\r\n            </div>\r\n            <div className=\"cat-table\">\r\n                <table className=\"table table-dark\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">التاريخ</th>\r\n                            <th scope=\"col\">عنوان المنشور</th>\r\n                            <th scope=\"col\" >القسم</th>\r\n                            <th scope=\"col\">التصنيف</th>\r\n                            <th scope=\"col\">ت</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {desplay.map(availability => {\r\n                            return (\r\n                                <tr>\r\n                                    <td>{availability.date} <div className=\"drops-down\"><h3> اجراء<div className=\"drop\"><ul><li onClick={function(e){openModal();setdata(availability); settime(availability.date) ;setbuttomtext(\"تعديل\");setcheck(false)}}>تعديل</li><li onClick={()=>window.confirm(\"Are you sure you wish to delete this item?\")&& ondel(availability)}>مسح</li></ul> </div></h3></div>\r\n                                    {/* <Select className=\"cat-sele\" defaultValue={{label:\"اجراء\"}} options={[\r\n                                        {value:\"اجراء\" ,label:\"اجراء\"},\r\n                                        { value: 'edit', label: <button onClick={openModal}> تعديل</button> },\r\n                                        { value: 'delete', label: <button onClick={()=>window.confirm(\"Are you sure you wish to delete this item?\")&& ondel(availability)}> مسح</button> }]} onChange={(e)=>{if (e.value===\"edit\"){setdata(availability); settime(availability.date)} ;setbuttomtext(\"تعديل\");setcheck(false)} } /> */}\r\n                                         </td>\r\n                                    <td>{availability.postitl}</td>\r\n                                    <td >{availability.depar} </td>\r\n                                    <td >{availability.categuray} </td>\r\n                                    <td >{availability.id} </td>\r\n\r\n\r\n\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\nexport default Post;","D:\\amjed\\react task\\src\\component\\Nav.js",["61","62","63","64","65"],"D:\\amjed\\react task\\src\\component\\Humburker.js",["66","67","68"],"D:\\amjed\\react task\\src\\component\\Navication.js",[],"D:\\amjed\\react task\\src\\component\\navlink.js",["69","70","71","72"],"import react,{component,useState} from 'react';\r\nimport {Link ,NavLink} from 'react-router-dom'\r\nimport \"./comp.css\"\r\n\r\n\r\nfunction navlink(){\r\n    return(\r\n            <ul className=\"ul\">\r\n                <Link className=\"a\" to=\"/categ\">التصنيفات</Link>\r\n                <Link className=\"a\" to=\"/post\">المنشورات</Link>\r\n            </ul>  \r\n\r\n    )\r\n}\r\n\r\nexport default navlink;",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":1,"column":8,"nodeType":"79","messageId":"80","endLine":1,"endColumn":12},{"ruleId":"77","severity":1,"message":"81","line":2,"column":8,"nodeType":"79","messageId":"80","endLine":2,"endColumn":13},{"ruleId":"77","severity":1,"message":"82","line":2,"column":15,"nodeType":"79","messageId":"80","endLine":2,"endColumn":24},{"ruleId":"77","severity":1,"message":"83","line":2,"column":25,"nodeType":"79","messageId":"80","endLine":2,"endColumn":33},{"ruleId":"77","severity":1,"message":"84","line":4,"column":30,"nodeType":"79","messageId":"80","endLine":4,"endColumn":36},{"ruleId":"77","severity":1,"message":"82","line":1,"column":27,"nodeType":"79","messageId":"80","endLine":1,"endColumn":36},{"ruleId":"77","severity":1,"message":"85","line":11,"column":8,"nodeType":"79","messageId":"80","endLine":11,"endColumn":14},{"ruleId":"86","severity":1,"message":"87","line":25,"column":22,"nodeType":"79","endLine":25,"endColumn":33},{"ruleId":"88","severity":1,"message":"89","line":58,"column":13,"nodeType":"90","messageId":"91","endLine":58,"endColumn":26},{"ruleId":"88","severity":1,"message":"89","line":76,"column":13,"nodeType":"90","messageId":"91","endLine":76,"endColumn":26},{"ruleId":"88","severity":1,"message":"89","line":95,"column":9,"nodeType":"90","messageId":"91","endLine":95,"endColumn":22},{"ruleId":"77","severity":1,"message":"82","line":1,"column":27,"nodeType":"79","messageId":"80","endLine":1,"endColumn":36},{"ruleId":"86","severity":1,"message":"87","line":52,"column":21,"nodeType":"79","endLine":52,"endColumn":32},{"ruleId":"88","severity":1,"message":"89","line":89,"column":13,"nodeType":"90","messageId":"91","endLine":89,"endColumn":24},{"ruleId":"88","severity":1,"message":"89","line":112,"column":17,"nodeType":"90","messageId":"91","endLine":112,"endColumn":28},{"ruleId":"88","severity":1,"message":"89","line":131,"column":13,"nodeType":"90","messageId":"91","endLine":131,"endColumn":24},{"ruleId":"77","severity":1,"message":"81","line":1,"column":8,"nodeType":"79","messageId":"80","endLine":1,"endColumn":13},{"ruleId":"77","severity":1,"message":"82","line":1,"column":15,"nodeType":"79","messageId":"80","endLine":1,"endColumn":24},{"ruleId":"77","severity":1,"message":"83","line":1,"column":25,"nodeType":"79","messageId":"80","endLine":1,"endColumn":33},{"ruleId":"77","severity":1,"message":"92","line":2,"column":9,"nodeType":"79","messageId":"80","endLine":2,"endColumn":13},{"ruleId":"77","severity":1,"message":"93","line":2,"column":15,"nodeType":"79","messageId":"80","endLine":2,"endColumn":22},{"ruleId":"77","severity":1,"message":"82","line":4,"column":21,"nodeType":"79","messageId":"80","endLine":4,"endColumn":30},{"ruleId":"77","severity":1,"message":"94","line":4,"column":32,"nodeType":"79","messageId":"80","endLine":4,"endColumn":41},{"ruleId":"77","severity":1,"message":"95","line":4,"column":42,"nodeType":"79","messageId":"80","endLine":4,"endColumn":53},{"ruleId":"77","severity":1,"message":"81","line":1,"column":8,"nodeType":"79","messageId":"80","endLine":1,"endColumn":13},{"ruleId":"77","severity":1,"message":"82","line":1,"column":15,"nodeType":"79","messageId":"80","endLine":1,"endColumn":24},{"ruleId":"77","severity":1,"message":"83","line":1,"column":25,"nodeType":"79","messageId":"80","endLine":1,"endColumn":33},{"ruleId":"77","severity":1,"message":"93","line":2,"column":15,"nodeType":"79","messageId":"80","endLine":2,"endColumn":22},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'react' is defined but never used.","'component' is defined but never used.","'useState' is defined but never used.","'Switch' is defined but never used.","'Select' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Link' is defined but never used.","'NavLink' is defined but never used.","'useEffect' is defined but never used.","'useCallback' is defined but never used.","no-global-assign","no-unsafe-negation"]